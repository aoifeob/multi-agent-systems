agent Lightswitch {
    module Console console;
    module System system;

    types lights
    {
      formula switch(string);
      formula switch(string, string);
      formula light(string, string);
      formula linked(string, string);
    }

    initial linked("s1", "l1"), linked("s1", "l2"), linked("s2", "l3");
    initial light("l1", "off"), light("l2", "off"), light("l3", "off");
    initial switch("s1", "off"), switch("s2", "off");

    rule +!main(list args) {
        system.sleep(1000);
        !switch("s1", "on");
        system.sleep(1000);
        !switch("s2", "on");
        system.sleep(1000);
        !switch("s2", "off");
        system.sleep(1000);
        !switch("s1", "off");
        system.sleep(1000);
        !switch("s2", "on");
        system.sleep(1000);
        !switch("s2", "off");
        system.sleep(1000);
        s.exit();
    }

    rule +!light(string Light, string State) : light(Light, string PreviousState) {
      -light(Light, PreviousState);
      +light(Light, State);
    }

    rule +light(string Light, string State){
      console.println("Light: " + Light + " is in state: " + State);
    }

    rule +!switch(string Switch, string State){
      foreach(linked(Switch, string Light)){
        !light(Light, State);
      }
    }

}
